#!/usr/bin/env bash
set -e
#
# This script allows you to install Nubomedia PaaS API. To execute it:
#
# 'curl -fsSkL https://raw.githubusercontent.com/fhg-fokus-nubomedia/bootstrap/master/bootstrap | bash'


export DEBIAN_FRONTEND=noninteractive
_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

_nubomedia_paas_base_repo="https://github.com/fhg-fokus-nubomedia/nubomedia-paas.git"
_tag="develop"
#_tag="tags/1.1"


_base=/opt
_nubomedia_base="${_base}/nubomedia"
_nubomedia_paas="${_nubomedia_base}/nubomedia-paas"
_log_folder=/var/log/nubomedia

_user="$(id -un 2>/dev/null || true)"

function checkBinary {
  echo -n " * Checking for '$1'..."
  if command -v $1 >/dev/null 2>&1; then
     echo "OK"
     return 0
   else
     echo >&2 "FAILED."
     return 1
   fi
}

_ex='sh -c'
if [ "$_user" != 'root' ]; then
    if checkBinary sudo; then
        _ex='sudo -E sh -c'
    elif checkBinary su; then
        _ex='su -c'
    fi
fi

function createNubomediaBase {
    echo "Creating the Nubomedia base folder"
    # removing it if exists
    #$_ex 'rm -rf '$_nubomedia_base
    $_ex 'mkdir -p '$_nubomedia_paas
    $_ex 'chown -R '"$_user $_nubomedia_base"

    # create log folder and give permission
    #$_ex 'rm -rf '$_log_folder
    $_ex 'mkdir -p '$_log_folder
    $_ex 'chown -R '"$_user $_log_folder"
}

function compileProperties {

    export baseUrl
    read -p "Enter the PaaS ip [https://localhost:8443]: " baseUrl
    if [[ "$baseUrl" != "" ]]; then
        $_ex 'sed -i "s|openshift.baseURL=https://localhost:8443|openshift.baseURL=$baseUrl|g" /etc/nubomedia/paas.properties'
    fi

    export paasIp
    read -p "Enter the PaaS API ip [http://localhost:8081]: " paasIp
    if [[ "$paasIp" != "" ]]; then
        $_ex 'sed -i "s|paas.internalURL=http://localhost:8081|paas.internalURL=$paasIp|g" /etc/nubomedia/paas.properties'
    fi

    export vnfmIp
    read -p "Enter the Vnfm ip [localhost]: " vnfmIp
    if [[ $vnfmIp != "" ]]; then
        $_ex 'sed -i "s/paas.vnfmIP=localhost/paas.vnfmIP=$vnfmIp/g" /etc/nubomedia/paas.properties'
    fi

    export nfvoIp
    read -p "Enter the Orchestrator ip [localhost]: " nfvoIp
    if [[ $nfvoIp != "" ]]; then
         $_ex 'sed -i "s/nfvo.openbatonIP=localhost/nfvo.openbatonIP=$nfvoIp/g" /etc/nubomedia/paas.properties'
    fi

    export nfvoUsername
    read -p "Enter the Orchestrator username [admin]: " nfvoUsername
    if [[ $nfvoUsername != "" ]]; then
         $_ex 'sed -i "s/nfvo.openbatonUsername=admin/nfvo.openbatonUsername=$nfvoUsername/g" /etc/nubomedia/paas.properties'
    fi

    export nfvoPassword
    read -p "Enter the Orchestrator password [openbaton]: " nfvoPassword
    if [[ $nfvoPassword != "" ]]; then
         $_ex 'sed -i "s/nfvo.openbatonPasswd=openbaton/nfvo.openbatonPasswd=$nfvoPassword/g" /etc/nubomedia/paas.properties'
    fi

    export keystorePath
    read -p "Enter the Openshift Keystore location (including the filename): " keystorePath
    if [[ ! -z "$keystorePath" ]]; then
   	    $_ex 'cp '"${keystorePath} ${_nubomedia_paas}/resource/openshift-keystore"
    fi

    export authURL
    read -p "Enter the Vim Auth URL (http://localhost:5000/v2.0): " authURL
    if [[ "$authURL" != "" ]]; then
        $_ex 'sed -i "s|vim.authURL=http://localhost:5000/v2.0|vim.authURL:$authURL|g" /etc/nubomedia/paas.properties'
    fi

    export tenantName
    read -p "Enter the tenant name (nubomedia): " tenantName
    if [[ $tenantName != "" ]]; then
        $_ex 'sed -i "s/vim.tenant=nubomedia/vim.tenant=$tenantName/g" /etc/nubomedia/paas.properties'
    fi

    export username
    read -p "Enter the vim username (nubomedia): " username
    if [[ $username != "" ]]; then
        $_ex 'sed -i "s/vim.username=nubomedia/vim.username=$username/g" /etc/nubomedia/paas.properties'
    fi

    export password
    read -p "Enter the vim password (changeme): " password
    if [[ $password != "" ]]; then
        $_ex 'sed -i "s/vim.password=changeme/vim.password=$password/g" /etc/nubomedia/paas.properties'
    fi

    export keyPair
    read -p "Enter the vim keyPair (nubomedia): " keyPair
    if [[ $keyPair != "" ]]; then
        $_ex 'sed -i "s/vim.keypair=nubomedia/vim.keypair=$keyPair/g" /etc/nubomedia/paas.properties'
    fi
}

function checkoutNubomediaPaaS {
    echo "Getting Nubomedia PaaS API..."
    createNubomediaBase
    git clone --recursive "${_nubomedia_paas_base_repo}" "${_nubomedia_paas}"
    pushd "${_nubomedia_paas}"
    git checkout ${_tag}
    popd
    $_ex 'mkdir -p "/etc/nubomedia"'
    echo "created properties folder"
    $_ex 'cp '"${_nubomedia_paas}/src/main/resources/paas.properties /etc/nubomedia/paas.properties"
    $_ex 'cp '"${_nubomedia_paas}/resource/cloudrepo-vnfd.json /etc/nubomedia/cloudrepo-vnfd.json"
    $_ex 'cp '"${_nubomedia_paas}/resource/nubomedia-nsd.json /etc/nubomedia/nubomedia-nsd.json"
    echo "copied properties file, now modifing..."
}

function compileNubomediaPaaS {
    echo "compiling the Nubomedia PaaS API"
    pushd "${_nubomedia_paas}"
    ./nubomedia-paas.sh compile
    if [ $? -ne 0 ]; then
        echo "ERROR: The compilation of the Nubomedia PaaS API failed"
        exit 1
    fi
    popd
}

function startNubomediaPaaS {
    echo "starting the Nubomedia PaaS API"
    pushd ${_nubomedia_paas}
    ./nubomedia-paas.sh start
    popd
}

function deployNubomediaPaaS {
    compileNubomediaPaaS
    startNubomediaPaaS
}

function bootstrap {
    # checkout Nubomedia PaaS API
    checkoutNubomediaPaaS
    compileProperties
    # deploy and compile Nubomedia PaaS API
    deployNubomediaPaaS
    echo "Nubomedia PaaS API is up and running now. Check screen -x nubomedia-paas..."

}

bootstrap
